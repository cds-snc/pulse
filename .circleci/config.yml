jobs:
  track_digital:
    docker:
      - image: "circleci/python:3.6.1"
      - image: "mongo:3.6.2"
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          key: "deps1-{{ .Branch }}-{{ checksum \"requirements.txt\" }}"
      - run:
          command: |
              python3 -m venv .env
              . .env/bin/activate
              pip install -r requirements.txt
              pip install -e .[development]
          name: "Installing dependencies"
      - save_cache:
          key: "deps1-{{ .Branch }}-{{ checksum \"requirements.txt\" }}"
          paths:
            - .env
      - run:
          command: |
              . .env/bin/activate
              # pylint src tests -- Major overhaul needed to not fail linting, not including linting in tests for now
              # mypy src tests
              pytest --cov=track tests
          name: "Running tests"
    working_directory: ~/repo/track_digital
  tracker:
    docker:
      - image: "circleci/python:3.6.1"
      - image: "mongo:3.6.2"
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          key: "deps1-{{ .Branch }}-{{ checksum \"requirements.txt\" }}"
      - run:
          command: |
              python3 -m venv .env
              . .env/bin/activate
              pip install -r requirements.txt
              pip install -e .[development]
          name: "Installing dependencies"
      - save_cache:
          key: "deps1-{{ .Branch }}-{{ checksum \"requirements.txt\" }}"
          paths:
            - .env
      - run:
          command: |
              . .env/bin/activate
              # pylint src tests -- Major overhaul needed to not fail linting, not including linting in tests for now
              # mypy src tests
              pytest --cov=data tests
          name: "Running tests"
    working_directory: ~/repo/tracker
  tracker_integration:
    docker:
      - image: "circleci/python:3.6.1"
      - image: "mongo:3.6.2"
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          key: "deps1-{{ .Branch }}-{{ checksum \"requirements.txt\" }}"
      - run:
          command: |
              python3 -m venv .env
              . .env/bin/activate
              pip install -r requirements.txt
          name: "Installing dependencies"
      - save_cache:
          key: "deps1-{{ .Branch }}-{{ checksum \"requirements.txt\" }}"
          paths:
            - .env
      - run:
          command: |
              sudo apt-get install -y apt-transport-https
              sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
              echo "deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/3.6 main" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
              sudo apt-get update
              sudo apt-get install -y mongodb-org-tools=3.6.2
          name: "Installing dependencies"
      - run:
          command: |
              mkdir csv
              cat > ./csv/domains.csv  << EOF
              domain,filler,organization_en,organization_fr
              canada.ca,,Government of Canada,Gouvernement du Canada
              EOF
              cat > ./csv/subdomains.csv  << EOF
              domain
              digital.canada.ca
              numerique.canada.ca
              open.canada.ca
              ouvert.canada.ca
              EOF
              . .env/bin/activate
              tracker insert --parents ./csv/domains.csv --subdomains ./csv/subdomains.csv
          name: "Populating domains"
      - run:
          command: |
              docker build -t track-run -f Dockerfile.run .
              docker run -e TRACKER_ENV=production -e TRACKER_MONGO_URI="mongodb://127.0.0.1:27017" track-run
              mkdir -p workspace
              mongoexport --db tracker --collection meta --out workspace/mongo_dump
          name: "Creating scan results"
    working_directory: ~/repo/tracker
  deploy_site:
    docker:
      - image: docker:17.12.1-ce-git
    steps:
      - checkout:
          path: ~/repo
      - setup_remote_docker
      - run:
          command: |
              docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
              docker build  -t "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" -t "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:latest" .
              docker push "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
              docker push "${DOCKER_REGISTRY}/${DOCKER_NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:latest"
          name: "Build and Deploy Website Docker Image"
    working_directory: ~/repo/track_digital

workflows:
  version: 2
  tracker:
    jobs:
      - track_digital 
      - tracker
      - tracker_integration
      - deploy_site:
          filters:
            branches:
              only:
                - master
          requires:
            - track_digital
            - tracker
